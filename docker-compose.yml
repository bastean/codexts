services:
  db:
    container_name: codexts-db
    image: mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    command: mongod --quiet --logpath /dev/null
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - codexts-db:/data/db
    restart: always

  backend:
    container_name: codexts-backend
    build:
      context: .
      dockerfile: src/apps/ecommerce/backend/Dockerfile
      target: production
    environment:
      PORT: ${PORT_BACKEND}
      DB_URI: 'mongodb://${DB_USERNAME}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?authSource=admin'
      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
    ports:
      - ${PORT_BACKEND}:${PORT_BACKEND}
    volumes:
      - codexts-backend:/app/logs
    healthcheck:
      test: wget --no-verbose --tries=1 --spider backend:${PORT_BACKEND}
      interval: 3s
      timeout: 3s
      retries: 30
      start_period: 0s
    restart: always

  frontend:
    container_name: codexts-frontend
    build:
      context: src/apps/ecommerce/frontend
      dockerfile: Dockerfile
      target: production
      args:
        BACKEND_URL: 'http://localhost:${PORT_BACKEND}/v1'
    environment:
      PORT: ${PORT_FRONTEND}
    ports:
      - ${PORT_FRONTEND}:${PORT_FRONTEND}
    depends_on:
      backend:
        condition: service_healthy
    restart: always

volumes:
  codexts-db:
  codexts-backend:
